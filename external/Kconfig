
config DM
	bool "DM"
	default n
	depends on NET
	---help---
		enable the DM functionality
if DM
config LWM2M_WAKAAMA
	bool "LWM2M_WAKAAMA"
	default y
	---help---
		enable LWM2M WAKAAMA external feature

if LWM2M_WAKAAMA
choice
	prompt "LWM2M WAKAAMA example"
	default LWM2M_CLIENT_MODE

config LWM2M_CLIENT_MODE
	bool "CLIENT_MODE"
	---help---
		enable LWM2M WAKAAMA client example

config LWM2M_SERVER_MODE
	bool "SERVER_MODE"
	---help---
		enable LWM2M WAKAAMA server example
endchoice

config LWM2M_LITTLE_ENDIAN
	bool "LITTLE_ENDIAN"
	default y
	---help---
		LWM2M supports LITTLE_ENDIAN and BIG_ENDIAN mode.
		according to server configuration, LWM2M client should match it.
		default value is LITTLE_ENDIAN and if you do not select as LITTLE_ENDIAN,
		BIG_ENDIAN will be used instead of it

config LWM2M_SECURITY
	bool "USE_SECURITY"
	default n
	depends on NET_SECURITY_TLS
	---help---
		This definition is for enabling COAP over TLS and DTLS.
endif

menuconfig DM_WIFI
	bool "Set Up Wifi Info For DM Demo"
	default y
	---help---
		Enable the artik demo example

if DM_WIFI

config DM_AP_SSID
	string "wifi ap ssid"
	default "SSID"

config DM_AP_PASS
	string "wifi ap password"
	default "PASSWORD"

config DM_AP_SECURITY
	string "wifi join security"
	default "wpa2_aes"

endif #DM_WIFI

endif

menu "IOTIVITY Config Parameters"

config ENABLE_IOTIVITY
	bool "enable / disable iotivity stack"
	default n
	select LIBC_NETDB
	select TIME_EXTENDED
	---help---
		select to enable the iotivity stack in tinyara

config IOTIVITY_RELEASE_VERSION
	string "iotivity stack version"
	default "1.2-rel"
	depends on ENABLE_IOTIVITY
	---help---
		define this to iotivity stack release veriosn in use

config IOTIVITY_ROUTING
	string "Enable routing, allowed values : 'EP' / 'GW' "
	default "EP"
	depends on ENABLE_IOTIVITY
	---help---
		define this to enable routing, allowed values : 'EP' / 'GW'

config IOTIVITY_PTHREAD_STACKSIZE
	int "Default pthread stack size for iotivity threads"
	default 8192
	depends on ENABLE_IOTIVITY
	---help---
		Default pthread stack size for iotivity threads

config IOTIVITY_QUEING_PTHREAD_STACKSIZE
	int "Default pthread stack size for the queing thread"
	default 3072
	depends on ENABLE_IOTIVITY
	---help---
		Default pthread stack size for the queing thread

config IOTIVITY_RETRANSMIT_PTHREAD_STACKSIZE
	int "Default pthread stack size for the retransmission pthread"
	default 1024
	depends on ENABLE_IOTIVITY
	---help---
		Default pthread stack size for the retransmission pthread

config IOTIVITY_TCPRECEIVE_PTHREAD_STACKSIZE
	int "Default pthread stack size for the TCP-receive thread"
	default 8192
	depends on ENABLE_IOTIVITY
	---help---
		Default pthread stack size for the TCP-receive thread

config IOTIVITY_RECEIVEHANDLER_PTHREAD_STACKSIZE
	int "Default pthread stack size for the receive-handler thread"
	default 8192
	depends on ENABLE_IOTIVITY
	---help---
		Default pthread stack size for the receive-handler thread

config ENABLE_IOTIVITY_SECURED
	bool "enable iotivity security"
	default n
	depends on ENABLE_IOTIVITY
	---help---
		select to enable the security for iotivity stack in tinyara

config ENABLE_IOTIVITY_CLOUD
	bool "enable iotivity cloud"
	default n
	depends on ENABLE_IOTIVITY
	---help---
		select to enable the cloud for iotivity stack in tinyara

config IOTIVITY_RELEASE
	bool "Set Iotivity to Release mode"
	default y
	depends on ENABLE_IOTIVITY
	---help---
		select to build IoTivity in Release mode. Code will be optimized.

config IOTIVITY_DEBUG
        bool "enable iotivity stack logs"
        default n
        depends on ENABLE_IOTIVITY
        ---help---
                select to enable all iotivity stack logs (DEBUG / INFO etc.)

config IOTIVITY_NS_PROVIDER
        bool "enable iotivity notification service(provider only)"
        default n
        depends on ENABLE_IOTIVITY
        ---help---
                select to enable iotivity Notification Provider Service

endmenu #IOTIVITY Config Parameters

config LIBTUV
	bool "libtuv"
	default n
	---help---
		enable libtuv

config AWS_SDK
	bool "AWS IoT SDK"
	default n
	---help---
		enable AWS IoT Device SDK

